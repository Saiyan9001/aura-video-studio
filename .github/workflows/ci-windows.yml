name: CI - Windows

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  DOTNET_VERSION: '8.0.x'
  SOLUTION_FILE: Aura.sln

jobs:
  build-and-package-windows:
    name: Build and Package (Windows)
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2
      
    - name: Restore dependencies
      run: dotnet restore ${{ env.SOLUTION_FILE }}
      
    - name: Build Core Projects
      run: |
        dotnet build Aura.Core/Aura.Core.csproj --configuration Release --no-restore
        dotnet build Aura.Providers/Aura.Providers.csproj --configuration Release --no-restore
        dotnet build Aura.Api/Aura.Api.csproj --configuration Release --no-restore
        
    - name: Run Unit Tests
      run: dotnet test Aura.Tests/Aura.Tests.csproj --configuration Release --no-build --verbosity normal --logger "trx;LogFileName=unit-tests.trx"
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: Aura.Web/package-lock.json
      
    - name: Build Web UI
      run: |
        cd Aura.Web
        npm ci
        npm run build
      shell: powershell
      
    - name: Run Smoke Test
      run: |
        Write-Host "Running smoke test..." -ForegroundColor Cyan
        .\scripts\smoke-test.ps1
      shell: powershell
      timeout-minutes: 2
      
    - name: Build Portable ZIP
      run: |
        Write-Host "Building portable ZIP..." -ForegroundColor Cyan
        .\scripts\packaging\make_portable_zip.ps1 -Configuration Release -Platform x64
      shell: powershell
      
    - name: Build WinUI 3 App (x64)
      run: msbuild Aura.App/Aura.App.csproj /p:Configuration=Release /p:Platform=x64 /p:AppxBundle=Never /p:UapAppxPackageBuildMode=SideloadOnly /restore
      continue-on-error: true
      
    - name: Create artifacts directory
      run: |
        New-Item -ItemType Directory -Force -Path artifacts/windows/msix
        New-Item -ItemType Directory -Force -Path artifacts/windows/portable
        New-Item -ItemType Directory -Force -Path artifacts/windows/logs
      shell: powershell
      
    - name: Copy MSIX packages
      if: success()
      run: |
        if (Test-Path "Aura.App/AppPackages") {
          Copy-Item -Path Aura.App/AppPackages/**/*.msix -Destination artifacts/windows/msix/ -Recurse -ErrorAction SilentlyContinue
        }
        if (Test-Path "Aura.App/bin/x64/Release") {
          Copy-Item -Path Aura.App/bin/x64/Release/**/*.msix -Destination artifacts/windows/msix/ -Recurse -ErrorAction SilentlyContinue
        }
      shell: powershell
      
    - name: Generate checksums
      run: |
        if (Test-Path "artifacts/windows/msix") {
          Get-ChildItem -Path artifacts/windows/msix -Recurse -File | ForEach-Object {
            $hash = Get-FileHash -Path $_.FullName -Algorithm SHA256
            "$($hash.Hash)  $($_.Name)" | Out-File -Append artifacts/windows/checksums.txt
          }
        }
      shell: powershell
      
    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-windows
        path: |
          **/TestResults/*.trx
          
    - name: Upload Portable ZIP
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: portable-zip
        path: |
          artifacts/windows/portable/AuraVideoStudio_Portable_x64.zip
          artifacts/windows/portable/checksums.txt
        if-no-files-found: error
    
    - name: Upload MSIX Packages
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: msix-packages
        path: |
          artifacts/windows/msix/**/*.msix
          artifacts/windows/checksums.txt
        if-no-files-found: warn
          
    - name: Upload Build Logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: build-logs
        path: artifacts/windows/logs
        if-no-files-found: ignore
